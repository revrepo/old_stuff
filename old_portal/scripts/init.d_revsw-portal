#!/bin/bash
### BEGIN INIT INFO
# Provides: revsw-portal 
# Required-Start: $network $local_fs $apache2
# Required-Stop: 
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: revsw-portal service
# Description: This script starts / ends revsw-portal service.
### END INIT INFO


. /lib/lsb/init-functions

export PATH="$PATH:/usr/local/bin"
base_path="/opt/revsw-portal"

if [ -f /etc/default/revsw-portal ]; then
        . /etc/default/revsw-portal
fi

FOREVER=`which forever`

if [ -z "$FOREVER" ]; then
        echo "Error: 'forever' tool cannot be found - aborting"
        exit 1
fi

#Script created by Srikanth Thota
case "$1" in
        start)

                if [ ! -z "`forever list|egrep -e '(server.js|collector.js|evaluator.js)'`" ] ; then
                        log_action_msg "At least one component is already running..." || true
                        exit 1
                fi

                log_action_msg "Starting CUBE components (collector/evaluator)" || true
                cd $base_path/node_modules/cube
                forever start --append -o $base_path/log/collector.log bin/collector.js
                forever start --append -o $base_path/log/evaluator.log bin/evaluator.js

                log_action_msg "Starting Rev Portal server" || true
                cd $base_path
                forever start --append -o $base_path/log/server.log server.js
        ;;
        stop)
                log_daemon_msg "Stopping all Portal and CUBE services..." || true
                forever stop $base_path/server.js
                forever stop $base_path/node_modules/cube/bin/collector.js
                forever stop $base_path/node_modules/cube/bin/evaluator.js
        ;;
        restart)
                log_daemon_msg "Restarting all Portal and CUBE services..." || true
                $0 stop
                $0 start
        ;;
        status)
                forever list
                if [ ! -z "`forever list|egrep -e '(server.js|collector.js|evaluator.js)'`" ] ; then
                        log_action_msg "At least one component is already running..." || true
                        exit 1
                fi
        ;;

        *)
                log_action_msg "Usage: $0 {start|stop|restart|status}" || true
                exit 1
        ;;
esac
