#
# Copyright (C) 2009-2013 Barchart, Inc. <http://www.barchart.com/>
#
# All rights reserved. Licensed under the OSI BSD License.
#
# http://www.opensource.org/licenses/bsd-license.php
#

##################################################################
#
# note: nar internally uses:
# g++ front end for compiler phase and
# gcc front end for linker phase of the build
#
##################################################################

#
# Linux 32
#
i386.Linux.linker=g++

# options for g++ compiler front end
i386.Linux.gpp.cpp.compiler=g++
i386.Linux.gpp.cpp.defines=IA32 LINUX
i386.Linux.gpp.cpp.options=-c -m32 -fPIC -pthread -fexceptions -O2 -fno-strict-aliasing -fno-omit-frame-pointer -Wall -Wextra
i386.Linux.gpp.cpp.includes=
i386.Linux.gpp.cpp.excludes=

# options for gcc linker front end
i386.Linux.gpp.linker.options=-shared -shared-libgcc -m32 -fPIC -fexceptions -Wl,-Map,barchart-udt4-i386-Linux-gpp.map
i386.Linux.gpp.linker.sysLibs=stdc++
i386.Linux.gpp.linker.libs=

i386.Linux.gpp.java.include=include;include/linux
i386.Linux.gpp.java.runtimeDirectory=jre/lib/i386/client

i386.Linux.gpp.lib.prefix=lib
i386.Linux.gpp.shared.prefix=lib
i386.Linux.gpp.static.extension=a
i386.Linux.gpp.shared.extension=so
i386.Linux.gpp.plugin.extension=so
i386.Linux.gpp.jni.extension=so
i386.Linux.gpp.executable.extension=

#
# Linux 64
#
amd64.Linux.linker=g++

# options for g++ compiler front end
amd64.Linux.gpp.cpp.compiler=g++
amd64.Linux.gpp.cpp.defines=AMD64 LINUX
amd64.Linux.gpp.cpp.options=-c -m64 -fPIC -pthread -fexceptions -O2 -fno-strict-aliasing -fno-omit-frame-pointer -Wall -Wextra
amd64.Linux.gpp.cpp.includes=
amd64.Linux.gpp.cpp.excludes=

# options for gcc linker front end
amd64.Linux.gpp.linker.options=-shared -shared-libgcc -m64 -fPIC -fexceptions -Wl,-Map,barchart-udt4-amd64-Linux-gpp.map
amd64.Linux.gpp.linker.sysLibs=stdc++
amd64.Linux.gpp.linker.libs=

amd64.Linux.gpp.java.include=include;include/linux
amd64.Linux.gpp.java.runtimeDirectory=jre/lib/amd64/server

amd64.Linux.gpp.lib.prefix=lib
amd64.Linux.gpp.shared.prefix=lib
amd64.Linux.gpp.static.extension=a
amd64.Linux.gpp.shared.extension=so
amd64.Linux.gpp.plugin.extension=so
amd64.Linux.gpp.jni.extension=so
amd64.Linux.gpp.executable.extension=

##################################################################

#
# MacOSX ("Mac OS X" => MacOSX) Intel (32 bits)
#
i386.MacOSX.linker=g++

# options for g++ compiler front end
i386.MacOSX.gpp.cpp.compiler=g++
i386.MacOSX.gpp.cpp.defines=IA32 OSX
i386.MacOSX.gpp.cpp.options=-c -m32 -arch i386 -fPIC -pthread -fexceptions -O2 -fno-strict-aliasing -fno-omit-frame-pointer -Wall -Wextra
i386.MacOSX.gpp.cpp.includes=
i386.MacOSX.gpp.cpp.excludes=

# options for gcc linker front end
i386.MacOSX.gpp.linker.options=-dynamic -bundle -shared-libgcc -m32 -Wl,-arch,i386 -fPIC -fexceptions -Wl,-map,barchart-udt4-i386-MacOSX-gpp.map
i386.MacOSX.gpp.linker.sysLibs=stdc++
i386.MacOSX.gpp.linker.libs=

i386.MacOSX.gpp.java.include=include
i386.MacOSX.gpp.java.runtimeDirectory=IGNORED

i386.MacOSX.gpp.lib.prefix=lib
i386.MacOSX.gpp.shared.prefix=lib
i386.MacOSX.gpp.static.extension=a
i386.MacOSX.gpp.shared.extension=dylib
i386.MacOSX.gpp.plugin.extension=bundle
i386.MacOSX.gpp.jni.extension=jnilib
i386.MacOSX.gpp.executable.extension=

#
# MacOSX ("Mac OS X" => MacOSX) Intel (64 bits)
#
x86_64.MacOSX.linker=g++

# options for g++ compiler front end
x86_64.MacOSX.gpp.cpp.compiler=g++
x86_64.MacOSX.gpp.cpp.defines=AMD64 OSX
x86_64.MacOSX.gpp.cpp.options=-c -m64 -arch x86_64 -fPIC -pthread -fexceptions -O2 -fno-strict-aliasing -fno-omit-frame-pointer -Wall -Wextra
x86_64.MacOSX.gpp.cpp.includes=
x86_64.MacOSX.gpp.cpp.excludes=

# options for gcc linker front end
x86_64.MacOSX.gpp.linker.options=-dynamic -bundle -shared-libgcc -m64 -Wl,-arch,x86_64 -fPIC -fexceptions -Wl,-map,barchart-udt4-x86_64-MacOSX-gpp.map
x86_64.MacOSX.gpp.linker.sysLibs=stdc++
x86_64.MacOSX.gpp.linker.libs=

x86_64.MacOSX.gpp.java.include=include
x86_64.MacOSX.gpp.java.runtimeDirectory=IGNORED

x86_64.MacOSX.gpp.lib.prefix=lib
x86_64.MacOSX.gpp.shared.prefix=lib
x86_64.MacOSX.gpp.static.extension=a
x86_64.MacOSX.gpp.shared.extension=dylib
x86_64.MacOSX.gpp.plugin.extension=bundle
x86_64.MacOSX.gpp.jni.extension=jnilib
x86_64.MacOSX.gpp.executable.extension=

##################################################################

#
# Windows g++ mingw32
#
x86.Windows.linker=g++

# options for g++ compiler front end
x86.Windows.gpp.cpp.compiler=g++
x86.Windows.gpp.cpp.defines=IA32 WIN32 _WIN32_WINNT=0x0501 __MINGW__
x86.Windows.gpp.cpp.options=-c -mconsole -mthreads -fexceptions -O2 -fno-strict-aliasing -fno-omit-frame-pointer
x86.Windows.gpp.cpp.includes=
x86.Windows.gpp.cpp.excludes=

# options for gcc linker front end
x86.Windows.gpp.linker.options=-shared -shared-libgcc -mthreads -fexceptions -Wl,--enable-auto-import -Wl,--kill-at -Wl,--add-stdcall-alias -Wl,--image-base,0x10000000 -Wl,-Map,barchart-udt4-x86-Windows-gpp.map
x86.Windows.gpp.linker.sysLibs=stdc++ ws2_32
x86.Windows.gpp.linker.libs=

x86.Windows.gpp.java.include=include;include/win32
x86.Windows.gpp.java.runtimeDirectory=lib

x86.Windows.gpp.lib.prefix=lib
x86.Windows.gpp.shared.prefix=
x86.Windows.gpp.static.extension=a
x86.Windows.gpp.shared.extension=dll
x86.Windows.gpp.plugin.extension=dll
x86.Windows.gpp.jni.extension=dll
x86.Windows.gpp.executable.extension=

#
# Windows g++ mingw64
#
amd64.Windows.linker=g++

# options for g++ compiler front end
amd64.Windows.gpp.cpp.compiler=g++
amd64.Windows.gpp.cpp.defines=AMD64 WIN32 _WIN32_WINNT=0x0501 __MINGW__
amd64.Windows.gpp.cpp.options=-c -mconsole -mthreads -fexceptions -O2 -fno-strict-aliasing -fno-omit-frame-pointer
amd64.Windows.gpp.cpp.includes=
amd64.Windows.gpp.cpp.excludes=

# options for gcc linker front end
amd64.Windows.gpp.linker.options=-shared -shared-libgcc -mthreads -fexceptions -Wl,--enable-auto-import -Wl,--kill-at -Wl,--add-stdcall-alias -Wl,--image-base,0x10000000 -Wl,-Map,barchart-udt4-amd64-Windows-gpp.map
amd64.Windows.gpp.linker.sysLibs=stdc++ ws2_32
amd64.Windows.gpp.linker.libs=

amd64.Windows.gpp.java.include=include;include/win32
amd64.Windows.gpp.java.runtimeDirectory=lib

amd64.Windows.gpp.lib.prefix=lib
amd64.Windows.gpp.shared.prefix=
amd64.Windows.gpp.static.extension=a
amd64.Windows.gpp.shared.extension=dll
amd64.Windows.gpp.plugin.extension=dll
amd64.Windows.gpp.jni.extension=dll
amd64.Windows.gpp.executable.extension=

##################################################################
